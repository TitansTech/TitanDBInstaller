using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using System.Net;

namespace TitanMuInstaller
{
    public partial class Form1 : Form
    {
        DBLite dbMu = new DBLite();
        DBLite dbMe = new DBLite();
        DBLite dbEvent = new DBLite();
        DBLite dbRank = new DBLite();
        DBLite dbLog = new DBLite();

        string User="sa";
        string Password = "654321";
        bool MD5 = true;

        [DllImport("ODBCCP32.dll")]
        private static extern bool SQLConfigDataSource(IntPtr hwndParent,
        int fRequest, string lpszDriver, string lpszAttributes);

        public Form1()
        {
            InitializeComponent();
        }

        private void GetIP()
        {
            string strHostName;
            strHostName = Dns.GetHostName();

            // Then using host name, get the IP address list..

            IPHostEntry ipEntry = Dns.GetHostByName(strHostName);
            IPAddress[] addr = ipEntry.AddressList;

            comboBox2.Items.Add("127.0.0.1");
            comboBox3.Items.Add("127.0.0.1");
            for (int i = 0; i < addr.Length; i++)
            {
                comboBox2.Items.Add(addr[i].ToString());
                comboBox3.Items.Add(addr[i].ToString());
            }
            if (addr.Length >= 1)
            {
                comboBox2.SelectedIndex = 0;
                comboBox3.SelectedIndex = comboBox3.Items.Count-1;
            }
            else
            {
                comboBox2.SelectedIndex = 0;
                comboBox3.SelectedIndex = 0;
            }
        }

        private string[] instanciasInstaladas()
        {
            try
            {
                Microsoft.Win32.RegistryKey rk;
                rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey(@"SOFTWARE\Microsoft\Microsoft SQL Server", false);
                string[] s;
                s = ((string[])rk.GetValue("InstalledInstances"));
                return s;
            }
            catch (Exception) 
            {
                return null;
            }
        }

        private string nombrePC()
        {
            try
            {
                Microsoft.Win32.RegistryKey rk;
                rk = Microsoft.Win32.Registry.LocalMachine.OpenSubKey(@"SOFTWARE\Microsoft\Microsoft SQL Server\90\Machines", false);
                return rk.GetValue("OriginalMachineName").ToString();
            }catch(Exception)
            {
                return null;
            }
        }

        private void TextChange()
        {
            string MapServerInfo = textBox1.Text + @"\Data\MapServerInfo.dat";
            string SCF_ServerList = textBox1.Text + @"\TitanCS\Data\SCF_ServerList.cfg";
            string SCF_Config_CS = textBox1.Text + @"\TitanCS\Data\SCF_Config.ini";
            string CommonLocStr = textBox1.Text + @"\Data\lang\kor\CommonLoc.cfg";
            string CommonServerStr = textBox1.Text + @"\Data\CommonServer.cfg";
            string iplist = textBox1.Text + @"\Data\IpList.dat";
            string TitanLSConfig = textBox1.Text + @"\TitanLinkServer\Config.ini";
            string AllowableIPList = textBox1.Text + @"\TitanLinkServer\Data\TT_AllowedList.dat";

            string ServerInfoDat1 = textBox1.Text + @"\GameServer\Data\ServerInfo.dat";
            string ServerInfoDat2 = textBox1.Text + @"\GameServerCS\Data\ServerInfo.dat";

            string connectstr1 = textBox1.Text + @"\GameServer\SCF_Connect.ini";
            string connectstr2 = textBox1.Text + @"\GameServerCS\SCF_Connect.ini";

            string titanEditorstr = textBox1.Text + @"\Docs & Tools\TitanEditor\Config.ini";
            string titanUpdaterstr = textBox1.Text + @"\Docs & Tools\TitanDBUpdater\TitanDBUpdater.ini";


            //--MapsServerInfo
            File.WriteLine(MapServerInfo, "0", false);
            File.WriteLine(MapServerInfo, "\t1\t0\t1\tS" + comboBox3.Text + "\t55901", true);
            File.WriteLine(MapServerInfo, "\t19\t0\t0\tS" + comboBox3.Text + "\t55909", true);
            File.WriteLine(MapServerInfo, "end", true);
            File.WriteLine(MapServerInfo, "", true);
            File.WriteLine(MapServerInfo, "1", true);
            File.WriteLine(MapServerInfo, "\t1\t0\t30\t19", true);
            File.WriteLine(MapServerInfo, "\t1\t0\t31\t19", true);
            File.WriteLine(MapServerInfo, "\t1\t0\t34\t19", true);
            File.WriteLine(MapServerInfo, "\t1\t0\t41\t19", true);
            File.WriteLine(MapServerInfo, "\t1\t0\t42\t19", true);
            File.WriteLine(MapServerInfo, "\t1\t0\t56\t19", true);
            File.WriteLine(MapServerInfo, "", true);
            File.WriteLine(MapServerInfo, "\t19\t1\t30\t-1", true);
            File.WriteLine(MapServerInfo, "\t19\t1\t31\t-1", true);
            File.WriteLine(MapServerInfo, "\t19\t1\t34\t-1", true);
            File.WriteLine(MapServerInfo, "\t19\t1\t41\t-1", true);
            File.WriteLine(MapServerInfo, "\t19\t1\t42\t-1", true);
            File.WriteLine(MapServerInfo, "\t19\t1\t56\t-1", true);
            File.WriteLine(MapServerInfo, "end", true);
            //--MapsServerInfo

            //--ConnectServer
            File.WriteLine(SCF_ServerList, "0\t1\t\"" + comboBox3.Text + "\"\t55901\t\"SHOW\"", false);
            File.WriteLine(SCF_ServerList, "0\t19\t\"" + comboBox3.Text + "\"\t55909\t\"HIDE\"", true);

            ini cs = new ini(SCF_Config_CS);
            cs.Section = "FtpServerInfo";
            cs.WriteValue("SCFAddress", comboBox3.Text);
            cs.Section = "HttpServerInfo";
            cs.WriteValue("SCFHTTPAddress", comboBox3.Text);
            //--ConnectServer

            //--CommonLoc
            ini commonloc = new ini(CommonLocStr);
            commonloc.Section = "ConnectServerInfo";
            commonloc.WriteValue("IP", comboBox2.Text);
            //--CommonLoc

            //--TitanLS
            ini tls = new ini(TitanLSConfig);
            tls.Section = "DataServer1";
            tls.WriteValue("Port", "55962");
            tls.WriteValue("Login", User);
            tls.WriteValue("Password", Password);

            tls.Section = "DataServer2";
            tls.WriteValue("Port", "55960");
            tls.WriteValue("Login", User);
            tls.WriteValue("Password", Password);

            //--ExtraServer
            tls.Section = "ExtraServer";
            tls.WriteValue("Name", "MuOnline");
            tls.WriteValue("NameMe", "Me_MuOnline");
            tls.WriteValue("Login", User);
            tls.WriteValue("Password", Password);
            //--SCFExDB

            //--TitanWzExDB
            tls.Section = "WzExDB";
            tls.WriteValue("Login", User);
            tls.WriteValue("Password", Password);
            //--TitanWzExDB

            //--SCFJS
            tls.Section = "JoinServer";
            tls.WriteValue("ServerODBC", "MuOnlineJoinDB");
            tls.WriteValue("Name", "Me_MuOnline");
            tls.WriteValue("Login", User);
            tls.WriteValue("Password", Password);
            tls.WriteValue("UseMD5", Convert.ToInt32(MD5).ToString());
            //--SCFJS

            //--CommonServer
            ini cmnsvr = new ini(CommonServerStr);
            cmnsvr.Section = "GameServerInfo";
            cmnsvr.WriteValue("HackLogServer", comboBox2.Text);
            cmnsvr.WriteValue("ChaosEventServer", comboBox2.Text);
            cmnsvr.WriteValue("EventChipServerIp", comboBox2.Text);
            cmnsvr.WriteValue("DevilSquareEventServer", comboBox2.Text);
            //--CommonServer

            //--IpList.dat
            File.WriteLine(iplist, "\"" + comboBox2.Text + "\"", false);
            //--IpList.dat

            //--AllowableIPList.txt
            string strSpaceIP = comboBox2.Text;

            File.WriteLine(AllowableIPList, "\"" + strSpaceIP + "\"", false);
            //--AllowableIPList.txt

            //--TitanEditor
            ini tteditor = new ini(titanEditorstr);
            tteditor.Section = "Connection";
            tteditor.WriteValue("User", User);
            tteditor.WriteValue("Password", Password);
            tteditor.WriteValue("ODBC", "MuOnline");
            tteditor.WriteValue("ODBC_Me", "Me_MuOnline");
            tteditor.WriteValue("SQLServer", comboBox1.Text);
            tteditor.Section = "Common";
            tteditor.WriteValue("UseMD5", Convert.ToInt32(MD5).ToString());
            tteditor.Section = "EditorAdds";
            tteditor.WriteValue("ItemNewPath", textBox1.Text + @"\Data\Lang\Item(New).txt");
            //--TitanEditor

            //--TitanDBUpdater
            ini titanUpdater = new ini(titanUpdaterstr);
            titanUpdater.Section = "SQLConfig";
            titanUpdater.WriteValue("IpAdress", comboBox1.Text);
            titanUpdater.WriteValue("User", User);
            titanUpdater.WriteValue("Password", Password);

            titanUpdater.Section = "DataBase";
            titanUpdater.WriteValue("MuOnline", "MuOnline");
            titanUpdater.WriteValue("MeMuOnline", "Me_MuOnline");
            //--TitanEditor

            //--ServerInfoDat
            ini serverinfo1 = new ini(ServerInfoDat1);
            serverinfo1.Section = "GameServerInfo";
            serverinfo1.WriteValue("ServerCode", "1");

            ini serverinfo2 = new ini(ServerInfoDat2);
            serverinfo2.Section = "GameServerInfo";
            serverinfo2.WriteValue("ServerCode", "19");
            //--ServerInfoDat

            //--SCF_Connect.ini
            ini connect1 = new ini(connectstr1);
            connect1.Section = "Connect";
            connect1.WriteValue("SCF_ServerPort", "55901");
            connect1.WriteValue("SCF_DataServerPort", "55960");
            connect1.WriteValue("SCF_DataServerPort2", "55962");

            ini connect2 = new ini(connectstr2);
            connect2.Section = "Connect";
            connect2.WriteValue("SCF_ServerPort", "55909");
            connect1.WriteValue("SCF_DataServerPort", "55962");
            connect1.WriteValue("SCF_DataServerPort2", "55960");
            //--SCF_Connect.ini

            //--CommonLoc
            //string sup = File.Read(suploaderstr).Replace(@"D:\MuOnline",textBox1.Text);
            //File.Write(suploaderstr, sup, false);
            //ini suploader = new ini(suploaderstr);
            //suploader.Section = "Program 4";
            //suploader.WriteValue("Arguments", comboBox3.Text);
            //suploader.Section = "Program 5";
            //suploader.WriteValue("Arguments", comboBox3.Text);
            //suploader.Section = "Program 9";
            //suploader.WriteValue("Arguments", comboBox2.Text + " 55970 " + comboBox2.Text + " 55962 55901");
            //suploader.Section = "Program 10";
            //suploader.WriteValue("Arguments", comboBox2.Text + " 55970 " + comboBox2.Text + " 55960 55919");
            //--CommonLoc
        }

        private void SCFDBAdds()
        {
            string Query = "";
            DateTime dt = DateTime.Today.AddDays(-7);
            DateTime dt1 = DateTime.Today.AddDays(1);

            Query = "ALTER TABLE MuCastle_DATA add HUNT_ZONE_OPEN Int default(1) NOT NULL";
            dbMe.Exec(Query);
            dbMe.Close();
            Query = "INSERT INTO DefaultClassType (Class,Strength,Dexterity,Vitality,Energy,Inventory,MagicList,Life,MaxLife,Mana,MaxMana,MapNumber,MapPosX,MapPosY,Quest,DbVersion,Leadership,Level,LevelUpPoint) values (0,18,18,15,30,0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF14081E000000000000D000000000000014101E000000000000D0000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,0x110000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000,60,60,60,60,0,182,128,0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,3,0,1,0)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "INSERT INTO DefaultClassType (Class,Strength,Dexterity,Vitality,Energy,Inventory,MagicList,Life,MaxLife,Mana,MaxMana,MapNumber,MapPosX,MapPosY,Quest,DbVersion,Leadership,Level,LevelUpPoint) values (16,18,18,15,30,0xx110000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000,60,60,60,60,0,182,128,0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,3,0,1,0)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "INSERT INTO DefaultClassType (Class,Strength,Dexterity,Vitality,Energy,Inventory,MagicList,Life,MaxLife,Mana,MaxMana,MapNumber,MapPosX,MapPosY,Quest,DbVersion,Leadership,Level,LevelUpPoint) values (32,28,20,25,10,0xxFF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000,110,110,20,20,0,182,128,0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,3,0,1,0)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "INSERT INTO DefaultClassType (Class,Strength,Dexterity,Vitality,Energy,Inventory,MagicList,Life,MaxLife,Mana,MaxMana,MapNumber,MapPosX,MapPosY,Quest,DbVersion,Leadership,Level,LevelUpPoint) values (48,28,20,25,10,0xxFF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000,110,110,20,20,0,182,128,0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,3,0,1,0)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "INSERT INTO DefaultClassType (Class,Strength,Dexterity,Vitality,Energy,Inventory,MagicList,Life,MaxLife,Mana,MaxMana,MapNumber,MapPosX,MapPosY,Quest,DbVersion,Leadership,Level,LevelUpPoint) values (64,22,25,20,15,0xxFF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000FF0000,80,80,30,30,0,182,128,0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,3,0,1,0)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "INSERT INTO DefaultClassType (Class,Strength,Dexterity,Vitality,Energy,Inventory,MagicList,Life,MaxLife,Mana,MaxMana,MapNumber,MapPosX,MapPosY,Quest,DbVersion,Leadership,Level,LevelUpPoint) values (80,21,21,18,23,0xxFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,3,0,1,0)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "INSERT INTO DefaultClassType (Class,Strength,Dexterity,Vitality,Energy,Inventory,MagicList,Life,MaxLife,Mana,MaxMana,MapNumber,MapPosX,MapPosY,Quest,DbVersion,Leadership,Level,LevelUpPoint) values (96,32,27,25,20,0xxFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,3,0,1,0)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "INSERT INTO MuCastle_DATA (MAP_SVR_GROUP,SIEGE_START_DATE,SIEGE_END_DATE,SIEGE_GUILDLIST_SETTED,SIEGE_ENDED,CASTLE_OCCUPY,OWNER_GUILD,MONEY,TAX_RATE_CHAOS,TAX_RATE_STORE,TAX_HUNT_ZONE) values (0," + "'" + dt.ToShortDateString() + "','" + dt1.ToShortDateString() + "',False,True,True,'',0,0,0,0)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFMarried Int default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFMarryHusbandWife varchar(10) NOT NULL default ''";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFMasterLevel Int default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFMasterPoints Int default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFCustomQuest varbinary(512) NOT NULL default((0x
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFPCPoints Int default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add Resets Int default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFGensFamily smallint default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFGensContribution int default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFGensRank int default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFGensDateLeave smalldatetime NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Character add SCFGensRecvReward tinyint default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE Guild add SCFG_Gens smallint default(0) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE MEMB_INFO add SCFIsVip SmallInt default(0) NOT NULL";
            dbMe.Exec(Query);
            dbMe.Close();
            Query = "ALTER TABLE MEMB_INFO add SCFVipMoney Int default(0) NOT NULL";
            dbMe.Exec(Query);
            dbMe.Close();
            Query = "ALTER TABLE MEMB_INFO add SCFVipDays Int default(0) NOT NULL";
            dbMe.Exec(Query);
            dbMe.Close();
            Query = "ALTER TABLE MEMB_INFO add SCFWareVipCount Int default(0) NOT NULL";
            dbMe.Exec(Query);
            dbMe.Close();
            Query = "ALTER TABLE MEMB_INFO add SCFLuckyCoins Int default(0) NOT NULL";
            dbMe.Exec(Query);
            dbMe.Close();
            Query = "CREATE TABLE [dbo].[ExtendedWarehouse]([AccountID] [varchar](10) NOT NULL,[Items] [varbinary](1920) NULL,[Money] [int] NULL DEFAULT (0),[EndUseDate] [smalldatetime] NULL,[DbVersion] [tinyint] NULL DEFAULT (0),[pw] [smallint] NULL DEFAULT (0),[SCFExtWare] [int] NOT NULL DEFAULT (0))";// ON [PRIMARY]";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "CREATE TABLE [dbo].[BotPet]([AccountID] [varchar](10) NOT NULL,[Name] [nvarchar](10) NOT NULL PRIMARY KEY NONCLUSTERED,[cLevel] [int] NOT NULL DEFAULT ((1)),[Class] [tinyint] NULL,[Experience] [bigint] NULL DEFAULT ((0)),[Power] [smallint] NULL,[Defense] [smallint] NULL,[Inventory] [varbinary](1728) NULL,[MagicList] [varbinary](180) NULL,[Life] [real] NOT NULL DEFAULT ((1)),[MaxLife] [real] NOT NULL DEFAULT ((1)),[Mana] [real] NOT NULL DEFAULT ((1)),[MaxMana] [real] NOT NULL DEFAULT ((1)),[MapNumber] [smallint] NULL,[MapPosX] [smallint] NULL,[MapPosY] [smallint] NULL,[CDate] [smalldatetime] NULL,[BotLife] [int] NOT NULL DEFAULT ((0)),[BotMaxLife] [int] NOT NULL DEFAULT ((1)),[BotLvlUpDefense] [int] NOT NULL DEFAULT ((1)),[BotLvlUpPower] [int] NOT NULL DEFAULT ((1)),[BotLvlUpLife] [int] NOT NULL DEFAULT ((1)),[BotLvlUpMana] [int] NOT NULL DEFAULT ((1)),[BotLvlUpExp] [int] NOT NULL DEFAULT ((10)),[BotLvlUpMaxLevel] [int] NOT NULL DEFAULT ((400)))";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER TABLE BotPet add BotVersion Int default(1) NOT NULL";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "CREATE TABLE [dbo].[SCFS5Quest]([AccountID] [varchar](10) NOT NULL,[Name] [nvarchar](10) NOT NULL PRIMARY KEY NONCLUSTERED,[SCFS5Quest] [varbinary] (5600) NOT NULL DEFAULT (0),[Type] [smallint] NOT NULL DEFAULT (0))";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "CREATE TABLE [dbo].[LuckyCoinsRank] (id int IDENTITY (1, 1),Account nvarchar(10),LuckyCoins int,Date smalldatetime)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "CREATE TABLE [dbo].[MuExtraData] ([HUNT_ZONE_OPEN] [Int] DEFAULT(1) NOT NULL)";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "ALTER Procedure [dbo].[WZ_CreateCharacter]  "
            + System.Environment.NewLine + "	@AccountID		varchar(10), "
            + System.Environment.NewLine + "	@Name			varchar(10), "
            + System.Environment.NewLine + "	@Class			tinyint "
            + System.Environment.NewLine + " AS "
            + System.Environment.NewLine + " Begin "
            + System.Environment.NewLine + "	SET NOCOUNT ON "
            + System.Environment.NewLine + "	SET	XACT_ABORT ON "
            + System.Environment.NewLine + "	DECLARE		@Result		tinyint "
            + System.Environment.NewLine + "	SET @Result = 0x00 "
            + System.Environment.NewLine + "	If EXISTS ( SELECT  Name  FROM  Character WHERE Name = @Name ) "
            + System.Environment.NewLine + "	begin "
            + System.Environment.NewLine + "		SET @Result	= 0x01 "
            + System.Environment.NewLine + "		GOTO ProcEnd "
            + System.Environment.NewLine + "	end "
            + System.Environment.NewLine + "	If EXISTS ( SELECT  Name  FROM  BotPet WHERE Name = @Name ) "
            + System.Environment.NewLine + "	begin "
            + System.Environment.NewLine + "		SET @Result	= 0x01					"
            + System.Environment.NewLine + "		GOTO ProcEnd						"
            + System.Environment.NewLine + "	end "
            + System.Environment.NewLine + "	BEGIN TRAN "
            + System.Environment.NewLine + "	If NOT EXISTS ( SELECT  Id  FROM  AccountCharacter WHERE Id = @AccountID ) "
            + System.Environment.NewLine + "		begin "
            + System.Environment.NewLine + "			INSERT INTO dbo.AccountCharacter(Id, GameID1, GameID2, GameID3, GameID4, GameID5, GameIDC)  "
            + System.Environment.NewLine + "			VALUES(@AccountID, @Name, NULL, NULL, NULL, NULL, NULL) "
            + System.Environment.NewLine + "			SET @Result  = @@Error "
            + System.Environment.NewLine + "		end "
            + System.Environment.NewLine + "	else "
            + System.Environment.NewLine + "		begin "
            + System.Environment.NewLine + "			Declare @g1 varchar(10), @g2 varchar(10), @g3 varchar(10), @g4 varchar(10), @g5 varchar(10)						"
            + System.Environment.NewLine + "			SELECT @g1=GameID1, @g2=GameID2, @g3=GameID3, @g4=GameID4, @g5=GameID5 FROM dbo.AccountCharacter Where Id = @AccountID 			"
            + System.Environment.NewLine + "			if( ( @g1 Is NULL) OR (Len(@g1) = 0)) "
            + System.Environment.NewLine + "				begin "
            + System.Environment.NewLine + "					UPDATE AccountCharacter SET  GameID1 = @Name "
            + System.Environment.NewLine + "					WHERE Id = @AccountID "
            + System.Environment.NewLine + "					SET @Result  = @@Error "
            + System.Environment.NewLine + "				end "
            + System.Environment.NewLine + "			else	 if( @g2  Is NULL OR Len(@g2) = 0) "
            + System.Environment.NewLine + "				begin "
            + System.Environment.NewLine + "					UPDATE AccountCharacter SET  GameID2 = @Name "
            + System.Environment.NewLine + "					WHERE Id = @AccountID "
            + System.Environment.NewLine + "					SET @Result  = @@Error "
            + System.Environment.NewLine + "				end "
            + System.Environment.NewLine + "			else	 if( @g3  Is NULL OR Len(@g3) = 0) "
            + System.Environment.NewLine + "				begin			"
            + System.Environment.NewLine + "					UPDATE AccountCharacter SET  GameID3 = @Name "
            + System.Environment.NewLine + "					WHERE Id = @AccountID "
            + System.Environment.NewLine + "					SET @Result  = @@Error "
            + System.Environment.NewLine + "				end "
            + System.Environment.NewLine + "			else	 if( @g4 Is NULL OR Len(@g4) = 0) "
            + System.Environment.NewLine + "				begin "
            + System.Environment.NewLine + "					UPDATE AccountCharacter SET  GameID4 = @Name "
            + System.Environment.NewLine + "					WHERE Id = @AccountID "
            + System.Environment.NewLine + "					SET @Result  = @@Error "
            + System.Environment.NewLine + "				end "
            + System.Environment.NewLine + "			else	 if( @g5 Is NULL OR Len(@g5) = 0) "
            + System.Environment.NewLine + "				begin "
            + System.Environment.NewLine + "					UPDATE AccountCharacter SET  GameID5 = @Name "
            + System.Environment.NewLine + "					WHERE Id = @AccountID "
            + System.Environment.NewLine + "					SET @Result  = @@Error"
            + System.Environment.NewLine + "				end 		"
            + System.Environment.NewLine + "			else "
            + System.Environment.NewLine + "				begin					"
            + System.Environment.NewLine + "					SET @Result	= 0x03							"
            + System.Environment.NewLine + "					GOTO TranProcEnd								"
            + System.Environment.NewLine + "				end 			 "
            + System.Environment.NewLine + "		end 	"
            + System.Environment.NewLine + "	if( @Result <> 0 ) "
            + System.Environment.NewLine + "		begin "
            + System.Environment.NewLine + "			GOTO TranProcEnd "
            + System.Environment.NewLine + "		end "
            + System.Environment.NewLine + "	else "
            + System.Environment.NewLine + "		begin "
            + System.Environment.NewLine + "			INSERT INTO dbo.Character(AccountID, Name, cLevel, LevelUpPoint, Class, Strength, Dexterity, Vitality, Energy, Inventory,MagicList, "
            + System.Environment.NewLine + "					Life, MaxLife, Mana, MaxMana, MapNumber, MapPosX, MapPosY,  MDate, LDate, Quest, DbVersion, Leadership,money ) "
            + System.Environment.NewLine + "			SELECT @AccountID As AccountID, @Name As Name, Level, 0, @Class As Class, "
            + System.Environment.NewLine + "				Strength, Dexterity, Vitality, Energy, Inventory,MagicList,  Life, MaxLife, Mana, MaxMana, MapNumber, MapPosX, MapPosY, "
            + System.Environment.NewLine + "				getdate() As MDate, getdate() As LDate, Quest, DbVersion, Leadership,0 "
            + System.Environment.NewLine + "			FROM  DefaultClassType WHERE Class = @Class "
            + System.Environment.NewLine + "			SET @Result  = @@Error "
            + System.Environment.NewLine + "		end "
            + System.Environment.NewLine + "TranProcEnd:	-- GOTO "
            + System.Environment.NewLine + "	IF ( @Result  <> 0 ) "
            + System.Environment.NewLine + "		ROLLBACK TRAN "
            + System.Environment.NewLine + "	ELSE "
            + System.Environment.NewLine + "		COMMIT	TRAN "
            + System.Environment.NewLine + "ProcEnd: "
            + System.Environment.NewLine + "	SET NOCOUNT OFF "
            + System.Environment.NewLine + "	SET	XACT_ABORT OFF "
            + System.Environment.NewLine + "	SELECT "
            + System.Environment.NewLine + "	   CASE @Result "
            + System.Environment.NewLine + "	      WHEN 0x00 THEN 0x01 "
            + System.Environment.NewLine + "	      WHEN 0x01 THEN 0x00 "
            + System.Environment.NewLine + "	      WHEN 0x03 THEN 0x03 "
            + System.Environment.NewLine + "	      ELSE 0x02 "
            + System.Environment.NewLine + "	   END AS Result "
            + System.Environment.NewLine + "End ";
            dbMu.Exec(Query);
            dbMu.Close();
            Query = "CREATE Procedure [dbo].[SCF_GENSRANKINGUPDATE]  "
            + System.Environment.NewLine + "	@GensFam int "
            + System.Environment.NewLine + " AS "
            + System.Environment.NewLine + " BEGIN "
            + System.Environment.NewLine + "	 SET NOCOUNT ON "
            + System.Environment.NewLine + "	 CREATE TABLE #RankTmp ( "
            + System.Environment.NewLine + "		 RowNumber int IDENTITY (1, 1), "
            + System.Environment.NewLine + "		 Name nvarchar(10), "
            + System.Environment.NewLine + "		 SCFGensContribution int "
            + System.Environment.NewLine + "	 ) "
            + System.Environment.NewLine + "	 INSERT #RankTmp (Name,SCFGensContribution) "
            + System.Environment.NewLine + "		 SELECT Name, SCFGensContribution "
            + System.Environment.NewLine + "			 FROM Character "
            + System.Environment.NewLine + "				 WHERE SCFGensFamily = @GensFam "
            + System.Environment.NewLine + "					 ORDER BY SCFGensContribution Desc; "
            + System.Environment.NewLine + "	 UPDATE Character "
            + System.Environment.NewLine + "	 SET Character.SCFGensRank = #RankTmp.RowNumber "
            + System.Environment.NewLine + "	 FROM Character "
            + System.Environment.NewLine + "	 INNER JOIN #RankTmp "
            + System.Environment.NewLine + "	 ON Character.Name collate Chinese_PRC_CI_AS = #RankTmp.Name collate Chinese_PRC_CI_AS "
            + System.Environment.NewLine + "	 DROP TABLE #RankTmp "
            + System.Environment.NewLine + "	 SET NOCOUNT OFF "
            + System.Environment.NewLine + "	 End ";
            dbMu.Exec(Query);
            dbMu.Close();
            
            Query = "CREATE TABLE [dbo].[GuildWarehouse]([G_Name] [varchar](10) NOT NULL,[Items] [varbinary](1920) NULL,[Money] [int] NULL DEFAULT (0),[EndUseDate] [smalldatetime] NULL,[DbVersion] [tinyint] NULL DEFAULT (0),[pw] [smallint] NULL DEFAULT (0))";// ON [PRIMARY]";
            dbMu.Exec(Query);
            dbMu.Close();
           
            Query = " ALTER PROCEDURE  [dbo].[WZ_SetGuildDelete]  "
            + System.Environment.NewLine + "	@GuildName		varchar(10) "
            + System.Environment.NewLine + " AS "
            + System.Environment.NewLine + " BEGIN "
            + System.Environment.NewLine + "	 SET NOCOUNT ON "
            + System.Environment.NewLine + "	 Declare		@Result		int "
            + System.Environment.NewLine + "	 Set @Result	= 1  "
            + System.Environment.NewLine + "	 Begin Transaction "
            + System.Environment.NewLine + "		 DELETE GuildMember WHERE G_Name = @GuildName "
            + System.Environment.NewLine + "	 	 If @@Error <> 0  "
            + System.Environment.NewLine + "	 	 begin "
            + System.Environment.NewLine + "		 	Set @Result	= 0 "
            + System.Environment.NewLine + "			goto PROBLEM "
            + System.Environment.NewLine + "		 end "
            + System.Environment.NewLine + "		 DELETE GuildWarehouse WHERE G_Name = @GuildName "
            + System.Environment.NewLine + "		 DELETE Guild WHERE G_Name = @GuildName "
            + System.Environment.NewLine + "	 	 If @@Error <> 0  "
            + System.Environment.NewLine + "	 		begin "
            + System.Environment.NewLine + "	 			Set @Result	= 0 "
            + System.Environment.NewLine + "	 			goto PROBLEM "
            + System.Environment.NewLine + "	 		end "
            + System.Environment.NewLine + "	 	 else goto SUCESS "
            + System.Environment.NewLine + "	 PROBLEM: "
            + System.Environment.NewLine + "	 	 rollback transaction "
            + System.Environment.NewLine + "	 SUCESS: "
            + System.Environment.NewLine + "	 	 commit transaction "
            + System.Environment.NewLine + "	 SELECT @Result  As Result "
            + System.Environment.NewLine + "	 SET NOCOUNT OFF "
            + System.Environment.NewLine + "	 End ";
            dbMu.Exec(Query);
            dbMu.Close();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            ini cfg = new ini(Application.StartupPath + @"\Config.ini");
            cfg.Section = "Connection";
            User = cfg.ReadString("User", "sa");
            Password = cfg.ReadString("Password", "654321");
            MD5 = Convert.ToBoolean(cfg.ReadInt("UseMD5", "1"));

            if (MD5)
                button3.Enabled = true;

            string [] instance = instanciasInstaladas();
            string pcName = nombrePC();
            foreach(string s in instance)
            {
                if(s == "MSSQLSERVER")
                {
                    comboBox1.Items.Add("(local)");
                }
                else
                {
                    if (pcName != null)
                        comboBox1.Items.Add(pcName + @"\" + s);
                    comboBox1.Items.Add(@"(local)\" + s);
                }
            }
            if (comboBox1.Items.Count >= 1)
                comboBox1.SelectedIndex = 0;
            GetIP();
            //TextChange();
            //
            //string ssa = MuOnline.Replace("\r\n", "\0\0");
            //    Application.Exit();
            
        }

        public bool CreateDNS(string Name,string Server,string DataBase, string User, string Password)
        {
            string sAttributes = "DSN=" + Name + "\0";
            sAttributes += "Server=" + Server + "\0";
            sAttributes = sAttributes + "Database=" + DataBase + "\0";
            sAttributes = sAttributes + "Trusted_Connection=True" + "\0\0";
            return SQLConfigDataSource((IntPtr)0, 4, "SQL Server", sAttributes);
        }


        private bool Create_MuOnline()
        {
            string create = File.Read(Application.StartupPath + @"/SQL/MuOnline_CreateDB.sql");
            create = create.Replace(@"C:\MuDBS", textBox1.Text + @"/DB");
            ExecSQLString(create, Global.titanCon);
            CreateDNS("MuOnline", comboBox1.Text, "MuOnline", User, Password);
            if (dbMu.Connect("MuOnline", User, Password) == false)
            {
                LogAdd(dbMu.ExError.Message);
                return false;
            }
            ExecSQLFile(Application.StartupPath + @"/SQL/MuOnline.sql", dbMu);
            ExecSQLFile(Application.StartupPath + @"/SQL/MuOnline_Convert_Query.sql", dbMu);
            ExecSQLFile(Application.StartupPath + @"/SQL/Mu_DBID_Init_Data.sql", dbMu);
            ExecSQLFile(Application.StartupPath + @"/SQL/GameServer_Init_Data.sql", dbMu);
            return true;
        }

        private bool Create_Me_MuOnline()
        {
            string create = File.Read(Application.StartupPath + @"/SQL/Me_MuOnline_CreateDB.sql");
            create = create.Replace(@"C:\MuDBS", textBox1.Text + @"/DB");
            ExecSQLString(create, Global.titanCon);
            CreateDNS("MuOnlineJoinDB", comboBox1.Text, "Me_MuOnline", User, Password);
            if (dbMe.Connect("MuOnlineJoinDB", User, Password) == false)
            {
                LogAdd(dbMe.ExError.Message);
                return false;
            }
            ExecSQLFile(Application.StartupPath + @"/SQL/Me_Muonline.sql", dbMe);
            return true;
        }

        private bool Create_MU2003_EVENT_DATA()
        {
            string create = File.Read(Application.StartupPath + @"/SQL/MU2003_EVENT_DATA_CreateDB.sql");
            create = create.Replace(@"C:\MuDBS", textBox1.Text + @"/DB");
            ExecSQLString(create, Global.titanCon);
            CreateDNS("MU2003_EVENT_DB", comboBox1.Text, "MU2003_EVENT_DATA", User, Password);
            if (dbEvent.Connect("MU2003_EVENT_DB", User, Password) == false)
            {
                MessageBox.Show(dbEvent.ExError.Message);
                return false;
            }
            ExecSQLFile(Application.StartupPath + @"/SQL/MU2003_EVENT_DATA.sql", dbEvent);
            return true;
        }

        private bool Create_Ranking()
        {
            string create = File.Read(Application.StartupPath + @"/SQL/Ranking_CreateDB.sql");
            create = create.Replace(@"C:\MuDBS", textBox1.Text + @"/DB");
            ExecSQLString(create, Global.titanCon);
            CreateDNS("Ranking", comboBox1.Text, "Ranking", User, Password);
            if (dbRank.Connect("Ranking", User, Password) == false)
            {
                LogAdd(dbRank.ExError.Message);
                return false;
            }
            ExecSQLFile(Application.StartupPath + @"/SQL/Ranking.sql", dbRank);
            return true;
        }

        private bool Create_MuLog()
        {
            string create = File.Read(Application.StartupPath + @"/SQL/MuLog_CreateDB.sql");
            create = create.Replace(@"C:\MuDBS", textBox1.Text + @"/DB");
            ExecSQLString(create, Global.titanCon);
            CreateDNS("USELOG", comboBox1.Text, "MuLog", User, Password);
            if (dbLog.Connect("USELOG", User, Password) == false)
            {
                LogAdd(dbLog.ExError.Message);
                return false;
            }
            ExecSQLFile(Application.StartupPath + @"/SQL/MuLogProc.sql", dbLog);
            return true;
        }

        private void LogAdd(string txt)
        {
            File.WriteLine(Application.StartupPath + @"/Log/" + DateTime.Now.Year + DateTime.Now.Month + DateTime.Now.Day + "_Info.log", txt, true);
            listBox1.Items.Add(txt);
            listBox1.SelectedIndex = listBox1.Items.Count - 1;
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (textBox1.Text != "" && comboBox1.Text != "")
            {
                string error = "[Error] Install Process Canceled!";
                if (checkBox1.Checked == true)
                {
                    if ((MD5 == true && textBox2.Text != "") || (MD5 == false))
                    {
                        LogAdd("Creating TitanMuInstaller DNS...");
                        CreateDNS("TitanInstaller", comboBox1.Text, "master", User, Password);
                        LogAdd("TitanMuInstaller DNS Created!");

                        LogAdd("Connecting to TitanMuInstaller DNS...");
                        if (Global.titanCon.Connect("TitanInstaller", User, Password) == false)
                        {
                            LogAdd(Global.titanCon.ExError.Message);
                            LogAdd(error);
                            return;
                        }
                        else
                        {
                            LogAdd("[TitanMuInstaller] Connected!");
                        }

                        //Create DB Dir
                        System.IO.Directory.CreateDirectory(textBox1.Text + @"/DB");

                        LogAdd("[MuOnline] Installing DB...");
                        if (!Create_MuOnline())
                        {
                            LogAdd(error);
                            return;
                        }
                        LogAdd("[MuOnline] DB Installed!");

                        LogAdd("[Me_MuOnline] Installing DB...");
                        if (!Create_Me_MuOnline())
                        {
                            LogAdd(error);
                            return;
                        }
                        LogAdd("[Me_MuOnline] DB Installed!");

                        LogAdd("[MU2003_EVENT_DATA] Installing DB...");
                        if (!Create_MU2003_EVENT_DATA())
                        {
                            LogAdd(error);
                            return;
                        }
                        LogAdd("[MU2003_EVENT_DATA] DB Installed!");

                        LogAdd("[Ranking] Installing DB...");
                        if (!Create_Ranking())
                        {
                            LogAdd(error);
                            return;
                        }
                        LogAdd("[Ranking] DB Installed!");

                        LogAdd("[MuLog] Installing DB...");
                        if (!Create_MuLog())
                        {
                            LogAdd(error);
                            return;
                        }
                        LogAdd("[MuLog] DB Installed!");

                        //Copy MD5 File
                        if (MD5)
                        {
                            LogAdd("[MD5] Installing MD5...");
                            try
                            {
                                System.IO.File.Copy(Application.StartupPath + @"/Files/WZ_MD5_MOD.dll", textBox2.Text + @"/WZ_MD5_MOD.dll", true);
                                Global.titanCon.Exec("exec sp_addextendedproc 'XP_MD5_EncodeKeyVal', 'WZ_MD5_MOD.dll'");
                                Global.titanCon.Close();
                                string Query = "";
                                Query = "CREATE FUNCTION [dbo].[fn_md5] (@data VARCHAR(10), @data2 VARCHAR(10))"
                                 + System.Environment.NewLine + "RETURNS BINARY(16) AS"
                                 + System.Environment.NewLine + "BEGIN "
                                 + System.Environment.NewLine + "DECLARE @hash BINARY(16)"
                                 + System.Environment.NewLine + "EXEC master.dbo.XP_MD5_EncodeKeyVal @data, @data2, @hash OUT"
                                 + System.Environment.NewLine + "RETURN @hash"
                                 + System.Environment.NewLine + "END";
                                dbMe.Exec(Query);
                                dbMe.Close();
                                Query = "CREATE PROCEDURE Encript"
                                 + System.Environment.NewLine + "@btInStr VARCHAR(10),"
                                 + System.Environment.NewLine + "@btInStrIndex VARCHAR(10)"
                                 + System.Environment.NewLine + "AS"
                                 + System.Environment.NewLine + "BEGIN"
                                 + System.Environment.NewLine + "DECLARE @btOutVal BINARY(16)"
                                 + System.Environment.NewLine + "EXEC master..XP_MD5_EncodeKeyVal @btInStr, @btInStrIndex, @btOutVal OUT"
                                 + System.Environment.NewLine + "UPDATE MEMB_INFO SET memb__pwd = @btOutVal WHERE memb___id = @btInStrIndex"
                                 + System.Environment.NewLine + "END";
                                dbMe.Exec(Query);
                                dbMe.Close();
                                Query = "CREATE PROCEDURE DencriptPW"
                                 + System.Environment.NewLine + "@btInStr VARCHAR(10),"
                                 + System.Environment.NewLine + "@btInStrIndex VARCHAR(10)"
                                 + System.Environment.NewLine + "AS"
                                 + System.Environment.NewLine + "BEGIN"
                                 + System.Environment.NewLine + "DECLARE @btOutVal BINARY(16)"
                                 + System.Environment.NewLine + "EXEC master..XP_MD5_EncodeKeyVal @btInStr, @btInStrIndex, @btOutVal OUT"
                                 + System.Environment.NewLine + "SELECT memb__pwd  FROM MEMB_INFO WHERE memb__pwd  = @btOutVal AND memb___id = @btInStrIndex"
                                 + System.Environment.NewLine + "END";
                                dbMe.Exec(Query);
                                dbMe.Close();
                                LogAdd("[MD5] MD5 Installed!");
                            }
                            catch(Exception ex)
                            {
                                LogAdd("[MD5] Instalation Error!");
                                LogAdd("Error: " + ex.Message);
                            }
                        }

                        LogAdd("[SCF] Installing DB Adds...");
                        SCFDBAdds();
                        LogAdd("[SCF] DB Adds Installed!");

                        LogAdd("[Success] DB Instalation Finished!!");
                    }
                }
            }
            if (textBox1.Text != "")
            {
                if (checkBox2.Checked == true)
                {
                    LogAdd("Config all Server Files...");
                    TextChange();
                    LogAdd("[Success] Config Finished!!");
                }
                if (checkBox3.Checked == true)
                {
                    string appPath = textBox1.Text + @"/SUploader/SUploader.exe";
                    System.Diagnostics.Process App = new System.Diagnostics.Process();
                    App.StartInfo.FileName = appPath;
                    System.IO.FileInfo FInfo = new System.IO.FileInfo(appPath);
                    App.StartInfo.WorkingDirectory = FInfo.DirectoryName;
                    App.Start();
                }
            }
        }


        private void ExecSQLString(string String, DBLite DB)
        {
            string[] splitter = new string[] { "\r\nGO\r\n" };
            string[] commandTexts = String.Split(splitter,
            StringSplitOptions.RemoveEmptyEntries);
            foreach (string commandText in commandTexts)
            {
                if (DB.Exec(commandText) == false)
                    LogAdd("Error: " + DB.ExError.Message);
                DB.Close();
            }
        }

        private void ExecSQLFile(string Path, DBLite DB)
        {
            string fileContent = File.Read(Path);
            string[] splitter = new string[] { "\r\nGO\r\n" };
            string[] commandTexts = fileContent.Split(splitter,
            StringSplitOptions.RemoveEmptyEntries);
            foreach (string commandText in commandTexts)
            {
                if (DB.Exec(commandText) == false)
                    LogAdd("Error: " + DB.ExError.Message);
                DB.Close();
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            FolderBrowserDialog ofDialog = new FolderBrowserDialog();
            ofDialog.ShowDialog();
            if (ofDialog.SelectedPath != null)
            {
                textBox1.Text = ofDialog.SelectedPath;
            }
            else
                textBox1.Text = "";            
        }

        private void button3_Click(object sender, EventArgs e)
        {
            FolderBrowserDialog ofDialog = new FolderBrowserDialog();
            ofDialog.ShowDialog();
            if (ofDialog.SelectedPath != null)
            {
                textBox2.Text = ofDialog.SelectedPath;
            }
            else
                textBox2.Text = ""; 
        }
    }
}
